{"version":3,"sources":["components/ContactUs/ContactUs.module.css","components/Header/Header.module.css","components/ProgramCard/ProgramCard.module.css","components/ProgramDetails/ProgramDetails.module.css","App.module.css","components/Home/Home.module.css","components/Body/Body.module.css","images/treefrog.jpg","components/ProgramList/ProgramList.module.css","components/ErrorPage/ErrorPage.module.css","components/Header/Header.jsx","components/Home/Home.jsx","components/ProgramCard/ProgramCard.jsx","components/ProgramList/ProgramList.jsx","components/Body/Body.jsx","components/ProgramDetails/ProgramDetails.jsx","components/ContactUs/ContactUs.jsx","components/ErrorPage/ErrorPage.jsx","App.js","index.js"],"names":["module","exports","container","formContainer","label","input","btn","select","displayInformation","neu","coe","card","link","back","text","image","navBar","displayShow","__webpack_require__","p","Header","react_default","a","createElement","react","className","styles","Component","Home","src","treefrog","alt","ProgramCard","_this$props","this","props","department","programID","programName","react_router_dom","to","concat","ProgramList","_this","programs","Object","values","displayContent","map","program","ProgramCard_ProgramCard","assign","key","departmentID","Body","departmetnts","data","navContent","dep","departmentName","react_router","path","ProgramList_ProgramList","Fragment","ProgramDetails","_this$props$program","programOverview","dangerouslySetInnerHTML","__html","ContactUs","_useState","useState","_useState2","slicedToArray","submittedForm","setSubmittedForm","_useState3","_useState4","selectDepartment","setSelectDepartment","_useState5","_useState6","selectProgram","setSelectProgram","displayDepartment","item","displayProgram","get","onSubmit","e","preventDefault","FormData","target","htmlFor","type","required","id","name","placeholder","value","defaultChecked","onChange","bind","defaultValue","ErrorPage","exact","component","App","fetchedData","setFetchedData","useEffect","fetchData","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","responseJson","wrap","_context","prev","next","fetch","sent","json","stop","apply","arguments","isEmpty","findDepartment","find","findProgram","prog","Header_Header","eaxct","render","_ref2","match","ProgramDetails_ProgramDetails","params","Body_Body","components_ContactUs_ContactUs","ReactDOM","basename","test","window","location","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.419ea738.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactUs_container__2xd3S\",\"formContainer\":\"ContactUs_formContainer__LXcZe\",\"label\":\"ContactUs_label__NWQtZ\",\"input\":\"ContactUs_input__1XuYb\",\"btn\":\"ContactUs_btn__2J3IR\",\"select\":\"ContactUs_select__1LiIP\",\"displayInformation\":\"ContactUs_displayInformation__2AQbG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__2Sn6p\",\"neu\":\"Header_neu__3Z5Ll\",\"coe\":\"Header_coe__2qTOL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProgramCard_container__1S6gM\",\"card\":\"ProgramCard_card__NlMJR\",\"link\":\"ProgramCard_link__1Ldz8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProgramDetails_container__3s-nD\",\"back\":\"ProgramDetails_back__132kO\",\"text\":\"ProgramDetails_text__2RKtF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"App_link__Y0DcA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__2Qzss\",\"image\":\"Home_image__WCkvH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"Body_navBar__Fq-v9\",\"displayShow\":\"Body_displayShow__2VPWC\"};","module.exports = __webpack_public_path__ + \"static/media/treefrog.52b16bf8.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProgramList_container__119gD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ErrorPage_container__MtSO_\"};","import React, { Component, Fragment } from 'react'\r\nimport styles from './Header.module.css';\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment >\r\n                <div className={styles.container}>\r\n                    <span className={styles.neu}> Northeastern University </span><hr />\r\n                    <span className={styles.coe}>COLLEGE OF ENGINEERING</span>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport treefrog from \"../../images/treefrog.jpg\";\r\nimport styles from './Home.module.css';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <h1>Welcome to Graduate, College of Engineering</h1> <br />\r\n            <img className={styles.image} src={treefrog} alt=\"tree frog\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './ProgramCard.module.css';\r\n\r\nexport default class ProgramCard extends Component {\r\n    render() {\r\n        const { department, programID, programName } = this.props;\r\n        return (\r\n            <li className={styles.container}>\r\n                <div className={styles.card}>\r\n                    <h2>{programID}</h2>\r\n                    <h4 className={styles.link}><Link to={`/engineering/${department}/${programID}`}>{programName}</Link></h4>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ProgramCard from '../ProgramCard/ProgramCard.jsx';\r\nimport styles from './ProgramList.module.css';\r\n\r\nexport default class ProgramList extends Component {\r\n    render() {\r\n        const { department } = this.props;\r\n        let programs = Object.values(department.programs);\r\n        let displayContent = (\r\n            <ul className={styles.container} >\r\n                {programs.map(program => <ProgramCard key={program.programID} {...program} department={this.props.department.departmentID} />)}\r\n            </ul>\r\n        )\r\n\r\n        return (\r\n            <div>\r\n                {displayContent}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport styles from './Body.module.css';\r\nimport ProgramList from '../ProgramList/ProgramList.jsx';\r\n\r\nexport default class Body extends Component {\r\n    render() {\r\n        const departmetnts = this.props.data;\r\n        let navContent = (\r\n            <div className={styles.navBar}>\r\n                {\r\n                    departmetnts.map(dep => <Link to={`/engineering/${dep.departmentID}`} key={dep.departmentID}>{dep.departmentName}</Link>)\r\n                }\r\n            </div>\r\n        )\r\n        let displayContent = (\r\n            <div className={styles.displayShow}>\r\n                {\r\n                    departmetnts.map(dep => <Route path={`/engineering/${dep.departmentID}`} key={dep.departmentID}><ProgramList department={dep} /></Route>)\r\n                }\r\n            </div>\r\n        )\r\n\r\n        return (\r\n            <>\r\n                <header>\r\n                    <nav>\r\n                        {navContent}\r\n                    </nav>\r\n                </header>\r\n                <div>\r\n                    {displayContent}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from './ProgramDetails.module.css';\r\n\r\nexport default class ProgramDetails extends Component {\r\n    render() {\r\n        const { department } = this.props;\r\n        const { programName, programOverview } = this.props.program;\r\n        return (\r\n            <div className={styles.container}>\r\n                <Link to={`/engineering/${department.departmentID}`} className={styles.back}>Back to {department.departmentID} page</Link>\r\n                <h1>{programName} </h1>\r\n                <h2>{department.departmentID} department</h2>\r\n                <div className={styles.text} dangerouslySetInnerHTML={{ __html: programOverview }} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState } from 'react';\r\nimport styles from './ContactUs.module.css';\r\n\r\nconst ContactUs = (props) => {\r\n    const [submittedForm, setSubmittedForm] = useState();\r\n    let [selectDepartment, setSelectDepartment] = useState();\r\n    let [selectProgram, setSelectProgram] = useState();\r\n\r\n    // the function of submitting form\r\n    function onSubmit(e) {\r\n        e.preventDefault();\r\n        const data = new FormData(e.target);\r\n        setSubmittedForm(data);\r\n    };\r\n\r\n    // change the department dropdown\r\n    const changeDepartment = (e) => {\r\n        // first, get the dropdown value\r\n        setSelectDepartment(e.target.value);\r\n        // second, set corresponding programs to the program dropdown\r\n        props.data.map(item => {\r\n            if (e.target.value === item.departmentID) {\r\n                setSelectProgram(Object.values(item.programs)[0]);\r\n            }\r\n            return true;\r\n        })\r\n    }\r\n\r\n    // change the program dropdown\r\n    const changeProgram = (e) => {\r\n        setSelectProgram(e.target.value);\r\n    };\r\n\r\n    let displayDepartment = props.data.map(item => {\r\n        return <option key={item.departmentID}>{item.departmentID}</option>\r\n    });\r\n\r\n    let displayProgram = props.data.map(item => {\r\n        if (selectDepartment === item.departmentID) {\r\n            const programList = Object.values(item.programs);\r\n            return programList.map(item =>\r\n                <option key={item.programID}>{item.programID}</option>\r\n            )\r\n        }\r\n        return true;\r\n    });\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {\r\n                submittedForm ? (\r\n                    // if the form is submitted\r\n                    <div>\r\n                        <div>\r\n                            Dear <span className={styles.displayInformation}>{submittedForm.get(\"firstName\")} {submittedForm.get(\"lastName\")}</span>,\r\n                            your form about the <span className={styles.displayInformation}>{submittedForm.get(\"program\")}</span> program\r\n                            in the <span className={styles.displayInformation}>{submittedForm.get(\"department\")}</span> department is submitted.\r\n                            Our team member will contact you in 3 working days.<br /><br />\r\n                            Please check your information. <br />\r\n                        </div>\r\n                        <div>Your education background is <span className={styles.displayInformation}>{submittedForm.get(\"educationBackground\")}</span></div>\r\n                        <div> Your email is <span className={styles.displayInformation}>{submittedForm.get(\"email\")}</span> <br /> </div>\r\n\r\n                        {/* because the telephone nad address are not required, so, only show these when user fills the input */}\r\n                        {submittedForm.get(\"telephone\") ? (<div>Your telephone is <span className={styles.displayInformation}>{submittedForm.get(\"telephone\")}</span><br /> </div>) : null}\r\n                        {submittedForm.get(\"address\") ? (<div>Your address is <span className={styles.displayInformation}>{submittedForm.get(\"address\")}</span><br /> </div>) : null}\r\n                    </div>\r\n                ) : (\r\n                    // if the form is not submitted\r\n                    <>\r\n                        <h2>You are ready to get started. We are ready to help.</h2>\r\n                        <p>We&apos;re here to answer your questions about graduate school. To receive additional information about this program and speak with a member of our team, complete the form below.</p>\r\n\r\n                        <form onSubmit={onSubmit} className={styles.formContainer}>\r\n\r\n                            {/* the following are inputs */}\r\n\r\n                            {/* name */}\r\n                            <h4>Your full name: </h4>\r\n                            {/* first name */}\r\n                            <label className={styles.label} htmlFor=\"firstName\">First Name: </label>\r\n                            <input className={styles.input} type=\"text\" required id=\"firstName\" name=\"firstName\" placeholder=\"First Name\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                {/* last name */}\r\n                            <label className={styles.label} htmlFor=\"lastName\">Last Name: </label>\r\n                            <input className={styles.input} type=\"text\" required id=\"lastName\" name=\"lastName\" placeholder=\"Last Name\" /> <br />\r\n\r\n                            {/* contact information*/}\r\n                            <h4>Your contact information: </h4>\r\n                            {/* email */}\r\n                            <label className={styles.label} htmlFor=\"email\">Email: </label>\r\n                            <input className={styles.input} type=\"email\" required id=\"email\" name=\"email\" placeholder=\"Email\" /> <br />\r\n                            {/* telephone */}\r\n                            <label className={styles.label} htmlFor=\"telephone\">Telephone: </label>\r\n                            <input className={styles.input} type=\"telephone\" id=\"telephone\" name=\"telephone\" placeholder=\"Telephone\" /> <br />\r\n                            {/* address */}\r\n                            <label className={styles.label} htmlFor=\"address\">Address: </label>\r\n                            <input className={styles.input} type=\"text\" required id=\"address\" name=\"address\" placeholder=\"Address\" /> <br />\r\n\r\n\r\n                            {/* educational background, radio button */}\r\n                            <h4>Your educational background: </h4>\r\n                            {/* <div> */}\r\n                            <label className={styles.label} htmlFor=\"educationBackground\">Your Educational Background: </label>\r\n                            <label htmlFor=\"undergraduate\">Undergraduate</label><input type=\"radio\" name=\"educationBackground\" id=\"undergraduate\" value=\"Undergraduate\" defaultChecked />&nbsp;&nbsp;&nbsp;\r\n                            <label htmlFor=\"graduate\">Graduate</label><input type=\"radio\" name=\"educationBackground\" id=\"graduate\" value=\"Graduate\" />&nbsp;&nbsp;&nbsp;\r\n                            <label htmlFor=\"phd\">PhD</label><input type=\"radio\" name=\"educationBackground\" id=\"phd\" value=\"PhD\" />\r\n                            {/* </div> */}\r\n\r\n                            {/* dropdowns: deparatment and program*/}\r\n                            <h4>The program you are interested in: </h4>\r\n                            <label className={styles.label} htmlFor=\"department\">Prefer Department</label>&nbsp;\r\n                            <select className={styles.select} id=\"department\" name=\"department\" value={selectDepartment} onChange={changeDepartment.bind(this)}>\r\n                                <optgroup>\r\n                                    <option value=\"department\" defaultValue>Choose a department</option>\r\n                                    {displayDepartment}\r\n                                </optgroup>\r\n                            </select>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <label className={styles.label} htmlFor=\"program\">Prefer Program</label>&nbsp;\r\n                            <select className={styles.select} id=\"program\" name=\"program\" value={selectProgram} onChange={changeProgram.bind(this)}>\r\n                                <optgroup>\r\n                                    <option value=\"program\" defaultValue>Choose a program</option>\r\n                                    {displayProgram}\r\n                                </optgroup>\r\n                            </select> <br />\r\n\r\n                            {/* form submit button */}\r\n                            <h4><input className={styles.btn} type=\"submit\" value=\"Get in Touch\" /></h4>\r\n                        </form>\r\n                    </>\r\n                )\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ContactUs;\r\n","import React from 'react';\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport Home from '../Home/Home.jsx';\r\nimport styles from './ErrorPage.module.css';\r\n\r\nconst ErrorPage = () => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <h1>Sorry, could not find the page.</h1>\r\n            <h2>Go back to the <Link to=\"/\">HOME</Link> page.</h2>\r\n            <Route path=\"/\" exact component={Home} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorPage;","import React, { useEffect, useState } from \"react\";\r\nimport { Link, Switch, Route } from \"react-router-dom\";\r\nimport { isEmpty } from \"lodash\";\r\nimport Header from './components/Header/Header.jsx';\r\nimport Home from './components/Home/Home.jsx';\r\nimport Body from './components/Body/Body.jsx';\r\nimport ProgramDetails from './components/ProgramDetails/ProgramDetails.jsx';\r\nimport Contact from './components/ContactUs/ContactUs.jsx';\r\nimport ErrorPage from './components/ErrorPage/ErrorPage.jsx';\r\nimport styles from './App.module.css';\r\n\r\nfunction App() {\r\n    const [fetchedData, setFetchedData] = useState();\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            // performs a GET request\r\n            const response = await fetch(\"https://demo2247515.mockable.io/engineering\");\r\n            const responseJson = await response.json();\r\n            setFetchedData(Object.values(responseJson));\r\n        }\r\n\r\n        if (isEmpty(fetchedData)) {\r\n            fetchData();\r\n        }\r\n    }, [fetchedData]);\r\n\r\n    const findDepartment = departmentID => {\r\n        return fetchedData.find(dep => { return dep.departmentID === departmentID });\r\n    }\r\n\r\n    const findProgram = (departmentID, programID) => {\r\n        const department = findDepartment(departmentID);\r\n        const program = Object.values(department.programs).find(prog => {\r\n            return prog.programID === programID;\r\n        })\r\n        return program;\r\n    }\r\n\r\n    // const findProgram = (departmentID, programID) => {\r\n    //     // first, find the department\r\n    //     const department = fetchedData.find(dep => { return dep.departmentID === departmentID });\r\n    //     // second, I could find the program\r\n    //     const program = Object.values(department.programs).find(prog => {\r\n    //         return prog.programID === programID;\r\n    //     })\r\n    //     return program;\r\n    // }\r\n\r\n    return isEmpty(fetchedData) ? null : (\r\n        <>\r\n            <header>\r\n                <Header />\r\n                <nav>\r\n                    <ul>\r\n                        <li>\r\n                            {/* link to home page */}\r\n                            <Link className={styles.link} to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li>\r\n                            {/* link to all departments page */}\r\n                            <Link className={styles.link} to=\"/engineering\">Departments</Link>\r\n                        </li>\r\n                        <li>\r\n                            {/* link to contact us page */}\r\n                            <Link className={styles.link} to=\"/contactus\">Contact Us</Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n\r\n            <div>\r\n                <Switch>\r\n                    <Route\r\n                        path={`/engineering/:departmentID/:programID`}\r\n                        eaxct\r\n                        render={({ match }) => {\r\n                            return <ProgramDetails\r\n                                department={findDepartment(match.params.departmentID)}\r\n                                program={findProgram(match.params.departmentID, match.params.programID)}\r\n                            />\r\n                        }}\r\n                    />\r\n\r\n                    {/* route to all departments page */}\r\n                    <Route eaxct path=\"/engineering\"><Body data={fetchedData} /></Route>\r\n\r\n                    {/* route to contact us page */}\r\n                    <Route path=\"/contactus\" exact ><Contact data={fetchedData} /></Route>\r\n\r\n                    {/* route to home page */}\r\n                    <Route path=\"/\" exact component={Home} />\r\n\r\n                    {/* route to error page */}\r\n                    <Route component={ErrorPage} />\r\n                </Switch>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n  <Router basename={/github.io/.test(window.location) ? \"/seainfo6150-final-project-webapp\" : \"\"}>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}